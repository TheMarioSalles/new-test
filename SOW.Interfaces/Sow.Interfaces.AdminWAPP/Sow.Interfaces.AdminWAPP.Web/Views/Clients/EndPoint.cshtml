@model IEnumerable<Sow.Interfaces.AdminWAPP.Domain.Dtos.Entities.EndPointDto>
@{
    ViewData["Title"] = "EndPoint";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>EndPoint</h2>

<div id="painelConta" class="col-xs-12 panel panel-default">
    Conta
    <div id="dadosConta" class="col-xs-12">
        <div id="nomeConta"></div>
        <div id="cnpjConta"></div>
        <div id="painelEndPoint" class="col-xs-12 panel panel-body">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Path)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @if ((Model.Count().Equals(0)))
                    {
                        <tr>
                            <td colspan="6">
                                <p>Nenhum End Point.</p>
                                <p>
                                    <a data-toggle="modal" data-target=".new-client">Deseja criar um novo <strong>End Point</strong>?</a>
                                </p>
                            </td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var ed in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => ed.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => ed.Path)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => ed.Description)
                                </td>
                                <td>
                                    <button class="btn btn-danger" data-toggle="modal" data-target=".update-client-@ed.Id">
                                        <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                                    </button>
                                    <div class="modal fade update-client-@ed.Id" tabindex="-1" role="dialog" aria-hidden="true">
                                        <div class="modal-dialog modal-lg">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <button type="button" class="close" data-dismiss="modal">
                                                        <span aria-hidden="true">×</span>
                                                    </button>
                                                    <h4 class="modal-title" id="title-new-client-@ed.Id">Alterar cliente @ed.Name</h4>
                                                </div>
                                                @await Component.InvokeAsync("Client", new { clientId = ed.Id })
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>