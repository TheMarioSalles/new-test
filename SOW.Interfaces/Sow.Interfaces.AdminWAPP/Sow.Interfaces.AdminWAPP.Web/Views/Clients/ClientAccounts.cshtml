@model IEnumerable<Sow.Interfaces.AdminWAPP.Domain.Dtos.Entities.AccountDto>

@{
    ViewData["Title"] = "Lista de Contas";
}
<div class="x_content">
    <div class="accordion" id="accordion" role="tablist" aria-multiselectable="true">
        <div class="panel">
            <div class="col-sm-10 col-xs-6">
                <a class="panel-heading" role="tab" id="headingOne" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    <h4 class="panel-title">@ViewData["Title"]</h4>
                </a>
            </div>
            <div class="col-sm-2 col-xs-6">
                <nav class="panel-heading">
                    <a data-toggle="modal" data-target=".new-account">Nova</a>
                </nav>
            </div>
            <div class="modal fade new-account" tabindex="-1" role="dialog" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">
                                <span aria-hidden="true">×</span>
                            </button>
                            <h4 class="modal-title" id="title-new-account">Nova Conta</h4>
                        </div>
                        @await Component.InvokeAsync("Account", new { clientId = ViewData["ClientId"] })
                    </div>
                </div>
            </div>
            <div id="collapseOne" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
                <div class="panel-body">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Document)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Agents)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.EndPoints)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Status)
                                </th>
                                <th>
                                    Editar
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Count().Equals(0))
                            {
                                <tr>
                                    <td colspan="6">
                                        <p>Nenhuma conta encontrada.</p>
                                        <p>
                                            <a data-toggle="modal" data-target=".new-account">Deseja criar uma nova <strong>Conta</strong>?</a>
                                        </p>
                                    </td>
                                </tr>
                            }
                            else
                            {
                                @foreach (var account in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => account.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => account.Document)
                                        </td>
                                        <td>
                                            @Html.ActionLink(account.Agents.Count().ToString(), "ClientAccountsAgents", "Clients", new { accountId = account.Id }, null)
                                        </td>
                                        <td>
                                            @Html.ActionLink(account.EndPoints.Count().ToString(), "ClientAccountsEndPoints", "Clients", new { accountId = account.Id }, null)
                                        </td>
                                        <td>
                                            @((account.Status) ? "Ativado" : "Desativado")
                                        </td>
                                        <td>
                                            <button class="btn btn-danger" data-toggle="modal" data-target=".update-account-@account.Id">
                                                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                                            </button>
                                            <div class="modal fade update-account-@account.Id" tabindex="-1" role="dialog" aria-hidden="true">
                                                <div class="modal-dialog modal-lg">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <button type="button" class="close" data-dismiss="modal">
                                                                <span aria-hidden="true">×</span>
                                                            </button>
                                                            <h4 class="modal-title" id="title-new-account-@account.Id">Alterar conta @account.Name</h4>
                                                        </div>

                                                        @await Component.InvokeAsync("Account", new { clientId = ViewData["ClientId"], accountDocument = account.Document })
                                                        @*await Component.InvokeAsync("Account", new { accountId = account.Id })*@
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
